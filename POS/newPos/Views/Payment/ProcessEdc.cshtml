
@{ 
    Layout = null;
}
<html>
<head>
    <link href="/Content/bootstrap.min.css" rel="stylesheet">
    <script src="/Scripts/jquery-3.3.1.js"></script>

    <script language="Javascript">
        var objComport = new ActiveXObject("ActiveXperts.Comport");
        function getUrlVars() {
            var vars = {};
            var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
                vars[key] = value;
            });
            return vars;
        }
        function getUrlRoot() {
            var pathname = window.location.pathname.split('/');
            var port = window.location.port == "" ? "" : ":" + window.location.port;
            return window.location.protocol + "//" + window.location.hostname + port + "/" + pathname[1];
        }
        $(document).ready(function () {

            var url = getUrlRoot() + "/GetEdcReceive";

            $.get(url, {}, function (result) {
                if (result != "False") {
                    //   alert(result.data.Amount);
                    SendP(result.data.Amount, result.data.ProCode, 1, result.data.Amount, result.data.PortNo, result.data.DocNo);
                    //   SaveEdcReceive(result.data.Amount, result.data.ProCode, result.data.PortNo, result.data.DocNo,"55555555555555");
                    // window.close();
                } else {
                    alert("Not Connect Edc");
                    window.close();
                }
            });



        });

        function SendP(vAmount, vCode, vVolume, vPrice, PortNo, DocNo) {

            objComport.Device = PortNo;
            objComport.BaudRate = 9600;
            objComport.ComTimeout = 1000;
            objComport.HardwareFlowControl = objComport.asFLOWCONTROL_DEFAULT;
            objComport.Open();

            if (objComport.IsOpened == -1) {

                var STX = "02";
                var llll = "0104";
                var MeassageP = "544848484848484848484948504848484828";

                var ProAmountH = "52480018";
                var ProAmount = SetAmount(vAmount.toString());
                var ProAmountFS = "28";
                var mProAmount = ProAmountH + ProAmount + ProAmountFS;

                var ProCodeH = "57490004";
                var ProCode = "";
                for (i = 0; i < vCode.length; i++) {
                    ProCode += vCode.charCodeAt(i);
                }
                var ProCodeFS = "28";
                var mProCode = ProCodeH + ProCode + ProCodeFS;

                var ProVolumeH = "57500018";
                var ProVolume = SetAmount(vVolume.toString());
                var ProVolumeFS = "28";
                var mProVolume = ProVolumeH + ProVolume + ProVolumeFS;

                var ProPriceH = "57510018";
                var ProPrice = SetAmount(vPrice.toString());
                var ProPriceFS = "28";
                var mProPrice = ProPriceH + ProPrice + ProPriceFS;

                var mPro = mProAmount + mProCode + mProVolume + mProPrice;

                var ETX = "03";
                var txtPurchase = STX + llll + MeassageP + mPro + ETX + CheckLRC(llll + MeassageP + mPro + ETX);

                var j = 0;
                for (i = 0; i < txtPurchase.length; i++) {
                    j += 2
                    objComport.writeByte(txtPurchase.substring(i, j));
                    i += 1
                }

                var recive = "";
                var recivetmp = "";
                var check = "F";
                var exit_loop = 0;
                var array_receive = [];
                var x = 0;
                var Cancel = false;
                while (objComport.LastError == 0 || objComport.LastError == 30115) {
                    recivetmp = objComport.ReadByte();
                    array_receive[x] = recivetmp;

                    recive += recivetmp + ",";
                   
                    if (recive.length >= 2000) {
                     
                        objComport.Close();
                        break;
                    }

                    if (check == "F") {
                        check == "T"
                        if (recive.substr(0, 1) != "6") {
                            objComport.Close();
                            break;
                        }
                    }

                    if (recivetmp == "") {
                        exit_loop = exit_loop + 1;
                    }
                    else {
                        exit_loop = 0;
                    }

                    if (exit_loop == 40) {
                      
                        objComport.Close();
                        break;
                    }
                    // Update Speed Cancel and Submit Read EDC
                    if (x > 10 && (array_receive[x - 3] == "28" && array_receive[x-2] == "3" )) {
                        Cancel = true;
                        objComport.Close();
                        break;
                    }
                    x++;

                   
                }

                if (recive.substr(0, 1) == "6") {
                    var txt1 = ""
                    txt1 = recive;
                    var a;
                    var b = 0;

                    // test Speed
                    //for (a = 0; a < txt1.length; a++) {
                    //    if (txt1.substr(a, 1) == "2") {
                    //        b = a;
                    //        break;
                    //        //window.close();
                    //    }
                    //}
                    if (Cancel == true) {
                        SaveEdcReceive(vAmount, vCode, PortNo, DocNo, false, recive);
                    } else {
                        SaveEdcReceive(vAmount, vCode, PortNo, DocNo, true, recive);
                    }
                   
                    window.close();
                    //return recive;
                    // document.frmcard.action = "payment_card_purchase_save.asp";
                    // document.frmcard.target = "_self";
                    // document.frmcard.submit();
                }
                else {
                    SaveEdcReceive(vAmount, vCode, PortNo, DocNo, false, "");
                    alert("ไม่สามารถติดต่อธนาคารได้ในขณะนี้ กรุณาตรวจสอบ");
                    //   return "ไม่สามารถติดต่อธนาคารได้ในขณะนี้ กรุณาตรวจสอบ";
                    //  setTimeout("self.close()", 500);
                    window.close();
                }

            }
            else {
                SaveEdcReceive(vAmount, vCode, PortNo, DocNo, false, "");
                alert("ไม่สามารถเชื่อมเครื่อง EDC ได้ กรุณาตรวจสอบ");
                objComport.Close();
                // return "ไม่สามารถติดต่อธนาคารได้ในขณะนี้ กรุณาตรวจสอบ";
                //  setTimeout("self.close()", 500);
                window.close();
            }

        }

        function CheckLRC(txt) {
            var LRC;
            var y = 0;
            for (x = 0; x < txt.length; x++) {
                y += 2;
                LRC = LRC ^ txt.substring(x, y);
                x += 1;
            }
            return LRC;
        }

        function SetAmount(Amount) {

            var a = "";
            var b = Amount.replace('.', "");

            for (i = 0; i < b.length; i++) {
                a = a + "" + b.charCodeAt(i);
            }

            var countAmount = a.toString().length;
            var HexAmount;
            switch (countAmount) {
                case 2:
                    HexAmount = "4848484848484848484848" + a; break;
                case 4:
                    HexAmount = "48484848484848484848" + a; break;
                case 6:
                    HexAmount = "484848484848484848" + a; break;
                case 8:
                    HexAmount = "4848484848484848" + a; break;
                case 10:
                    HexAmount = "48484848484848" + a; break;
                case 12:
                    HexAmount = "484848484848" + a; break;
                case 14:
                    HexAmount = "4848484848" + a; break;
                case 16:
                    HexAmount = "48484848" + a; break;
                case 18:
                    HexAmount = "484848" + a; break;
                case 20:
                    HexAmount = "4848" + a; break;
                case 22:
                    HexAmount = "48" + a; break;
                case 12:
                    HexAmount = a; break;
            }

            return (HexAmount);

        }



        function SaveEdcReceive(vAmount, vCode, PortNo, DocNo, Status, recive) {
            var url = getUrlRoot() + "/AddEdcReceive";

            $.post(url
                , {
                    PortNo: PortNo,
                    Amount: vAmount,
                    ProCode: vCode,
                    DocNo: DocNo,
                    Status: Status,
                    receive_edc: recive
                }
                , function (result) {
                    if (result == "Success") {
                        window.close();
                    }
                });
        }

        function GetTextPost(vAmount, vCode, vVolume, vPrice) {
            var STX = "02";
            var llll = "0104";
            var MeassageP = "544848484848484848484948504848484828";

            var ProAmountH = "52480018";
            var ProAmount = SetAmount(vAmount.toString());
            var ProAmountFS = "28";
            var mProAmount = ProAmountH + ProAmount + ProAmountFS;

            var ProCodeH = "57490004";
            var ProCode = "";
            for (i = 0; i < vCode.length; i++) {
                ProCode += vCode.charCodeAt(i);
            }
            var ProCodeFS = "28";
            var mProCode = ProCodeH + ProCode + ProCodeFS;

            var ProVolumeH = "57500018";
            var ProVolume = SetAmount(vVolume.toString());
            var ProVolumeFS = "28";
            var mProVolume = ProVolumeH + ProVolume + ProVolumeFS;

            var ProPriceH = "57510018";
            var ProPrice = SetAmount(vPrice.toString());
            var ProPriceFS = "28";
            var mProPrice = ProPriceH + ProPrice + ProPriceFS;

            var mPro = mProAmount + mProCode + mProVolume + mProPrice;

            var ETX = "03";
            var TextPost = STX + llll + MeassageP + mPro + ETX + CheckLRC(llll + MeassageP + mPro + ETX);

            return TextPost;
        }


    </script>

    <style type="text/css">
        .loader {
          border: 16px solid #f3f3f3;
          border-radius: 50%;
          border-top: 16px solid blue;
          border-bottom: 16px solid blue;
          width: 120px;
          height: 120px;
          -webkit-animation: spin 2s linear infinite;
          animation: spin 2s linear infinite;
           text-align:center;
        }

        @@-webkit-keyframes spin {
          0% { -webkit-transform: rotate(0deg); }
          100% { -webkit-transform: rotate(360deg); }
        }

        @@keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
    </style>
</head>


<body style="overflow:hidden;text-align:center">
    
    <div style="text-align:center;padding:15px">

        <div id="img" style="text-align:center">


         
          

            <font color="#FF9900"><b>กรุณารอสักครู่ ระบบกำลังทำรายการ</b></font><br><BR>
               <div style="text-align:center;padding-left:40%">
                  <div class="loader"></div>
                 </div>
               <BR>
            <font color="#FF0000"><b>หากมีการยกเลิกผ่านเครื่องรูดบัตร หรือ ต้องการทำรายการใหม่<br>*** กรุณารอจนกว่าหน้าจอจะเสร็จสิ้นการทำงาน ***</b></font><br><BR>

            <button type="button" class="btn btn-danger" onclick="window.close()"> ยกเลิก </button>
        </div>

    </div>

</body>
</html>